{"ast":null,"code":"var _jsxFileName = \"/Users/rosaiselalopezpalma/Documents/Laboratoria/finderfuel/Togetherclick-react/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { FaUserCircle } from \"react-icons/fa\";\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Dashboard \"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", React.createElement(FaUserCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"A\\xFAn no tienes un perfil, por favor agrega tu informaci\\xF3n para actualizarlo\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Crear Perfil\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/rosaiselalopezpalma/Documents/Laboratoria/finderfuel/Togetherclick-react/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","FaUserCircle","DashboardActions","Experience","getCurrentProfile","Dashboard","auth","user","profile","loading","name","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBD,EAAAA,iBADiB;AAEjBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAGoB;AACpCb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACEK,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC1C;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD0C,EAE1C;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,eAA8CD,IAAI,IAAIA,IAAI,CAACG,IAA3D,CAF0C,EAGzCF,OAAO,KAAK,IAAZ,GACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAIA,OAAO,CAACG,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADC,GAKD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFADF,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAR0C,CAD9C;AAiBD,CAzBD;;AA2BAN,SAAS,CAACO,SAAV,GAAsB;AACpBR,EAAAA,iBAAiB,EAAEN,SAAS,CAACe,IAAV,CAAeC,UADd;AAEpBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD,UAFH;AAGpBN,EAAAA,OAAO,EAAEV,SAAS,CAACe,IAAV,CAAeC;AAHJ,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAM;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADoB;AAEhCE,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFiB,CAAN,CAA7B;;AAKA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner'\nimport { FaUserCircle } from \"react-icons/fa\";\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({ \n  getCurrentProfile, \n  auth: { user }, \n  profile: { profile, loading } }) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return (\n    loading && profile === null ? <Spinner /> : <Fragment>\n      <h1 className='large text-primary'>Dashboard </h1>\n      <p className='lead'> <FaUserCircle/> Welcome {user && user.name}</p>\n      {profile !== null ? \n      <Fragment>\n        <DashboardActions />\n        <Experience experience = {profile.experience} />\n      </Fragment> : \n      <Fragment>\n        <p>Aún no tienes un perfil, por favor agrega tu información para actualizarlo</p>\n        <Link to='/create-profile' className='btn btn-primary my-1'>\n          Crear Perfil\n        </Link>\n      </Fragment>}\n    </Fragment>\n  )\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state  => ({\n   auth: state.auth,\n   profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}